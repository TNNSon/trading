{"version":3,"sources":["../src/app/route/RouteRegistration.ts"],"names":[],"mappings":";;AAEA,+BAA2C;AAE3C;IAAA;IA6BA,CAAC;IA5BU,0BAAQ,GAAf,UAAgB,GAAQ;QACpB,4BAA4B;QAC5B,gBAAgB;QAChB,gCAAgC;QAChC,iCAAiC;QACjC,iBAAiB;QACjB,MAAM;QAEN,gCAAgC;QAChC,4DAA4D;QAC5D,iGAAiG;QACjG,iDAAiD;QACjD,cAAc;QACd,uBAAuB;QACvB,mDAAmD;QACnD,OAAO;QACP,0BAAmB,CAAC,QAAQ,EAAE,CAAC;QAE/B,GAAG,CAAC,GAAG,CAAC,UAAC,GAAoB,EAAE,GAAqB,EAAE,IAA0B;YAC5E,IAAI,EAAE,CAAC;QACX,CAAC,CAAC,CAAC;QAEH,mDAAmD;QACnD,GAAG,CAAC,GAAG,CAAC,UAAC,GAAoB,EAAE,GAAqB;YAChD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;YACtB,wBAAwB;QAC5B,CAAC,CAAC,CAAC;IACP,CAAC;IACL,wBAAC;AAAD,CA7BA,AA6BC,IAAA;AA7BY,8CAAiB","file":"../../../public/app/route/RouteRegistration.js","sourcesContent":["// var version = require('express-route-versioning');\r\nimport express = require(\"express\");\r\nimport {V1RouteRegistration} from \"./v1.0\";\r\n\r\nexport class RouteRegistration {\r\n    static register(app: any) {\r\n        // API version handler setup\r\n        // version.use({\r\n        //     header: 'Accept-Version',\r\n        //     grab: /([0-9]*\\.?[0-9]+)/,\r\n        //     error: 406\r\n        // });\r\n\r\n        // app.use((req, res, next) => {\r\n        //     // Set accept-version header to the latest if not set\r\n        //     if (typeof req.headers['accept-version'] == 'undefined' || !req.headers['accept-version'])\r\n        //         req.headers['accept-version'] = '1.0';\r\n        //     next();\r\n        // }, version.reroute({\r\n        //     1.0: require(__dirname + '/v1.0').register()\r\n        // }));\r\n        V1RouteRegistration.register();\r\n\r\n        app.use((req: express.Request, res: express.Response, next: express.NextFunction) => {\r\n            next();\r\n        });\r\n\r\n        // Catch-all middleware to return a 404 if no route\r\n        app.use((req: express.Request, res: express.Response) => {\r\n            res.status(404).end();\r\n            //res.json(\"not found\");\r\n        });\r\n    }\r\n}"]}